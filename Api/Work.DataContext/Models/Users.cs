// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace Work.DataContext.Models;

public partial class Users
{
    /// <summary>
    /// 1: CTV, 2: DN,
    /// </summary>
    public int UserId { get; set; }

    public string UserIdGuid { get; set; }

    /// <summary>
    /// Id cha
    /// </summary>
    public int? IdParent { get; set; }

    public string Code { get; set; }

    public int? IdClient { get; set; }

    public int? IdLevel { get; set; }

    /// <summary>
    /// 1.CTV, 2. DN, 3 Shop
    /// </summary>
    public int? IdType { get; set; }

    public string Avatar { get; set; }

    public string UserName { get; set; }

    public string Name { get; set; }

    public string Phone { get; set; }

    public string Cmt { get; set; }

    public string CmtFront { get; set; }

    public string CmtBackside { get; set; }

    /// <summary>
    /// Duyệt cmt
    /// </summary>
    public bool? IsApproveCmt { get; set; }

    /// <summary>
    /// Tên miền
    /// </summary>
    public string Protocol { get; set; }

    /// <summary>
    /// Tên miền
    /// </summary>
    public string Domain { get; set; }

    /// <summary>
    /// 2: Đã thành công, 1: đang xử lý
    /// </summary>
    public int? DomainStatus { get; set; }

    public string FacebookId { get; set; }

    public string FacebookName { get; set; }

    public string Email { get; set; }

    public double? Balance { get; set; }

    /// <summary>
    /// Tiền đang luôn chuyển
    /// </summary>
    public double? CashInTransit { get; set; }

    /// <summary>
    /// Tổng thưởng
    /// </summary>
    public double? TotalReward { get; set; }

    public int? IdAddress { get; set; }

    public int? IdProvince { get; set; }

    public int? IdDistrict { get; set; }

    public int? IdWard { get; set; }

    public string Address { get; set; }

    public int? IdBank { get; set; }

    /// <summary>
    /// Chi nhánh
    /// </summary>
    public string BankBranch { get; set; }

    /// <summary>
    /// Họ và tên
    /// </summary>
    public string BankFullName { get; set; }

    /// <summary>
    /// Số tài khoản
    /// </summary>
    public string BankNumber { get; set; }

    /// <summary>
    /// Số tài khoản
    /// </summary>
    public string BankCardNumber { get; set; }

    public bool? IsTrial { get; set; }

    /// <summary>
    /// Bắt logout đăng nhập lại
    /// </summary>
    public bool? IsLogout { get; set; }

    /// <summary>
    /// Bắt logout đăng nhập lại
    /// </summary>
    public bool? IsLocked { get; set; }

    /// <summary>
    /// Duyệt tài khoản
    /// </summary>
    public bool? IsApproved { get; set; }

    /// <summary>
    /// Người hỗ trợ
    /// </summary>
    public int? IdSupport { get; set; }

    public bool? IsDeleted { get; set; }

    public int? CreatedUserId { get; set; }

    public DateTime? CreatedDate { get; set; }

    public int? UpdatedUserId { get; set; }

    public DateTime? UpdatedDate { get; set; }

    public int? DeletedUserId { get; set; }

    public DateTime? DeletedDate { get; set; }

    /// <summary>
    /// Người giới thiệu
    /// </summary>
    public int? ReferralUserId { get; set; }

    /// <summary>
    /// Mã giới thiệu
    /// </summary>
    public string ReferralCode { get; set; }

    /// <summary>
    /// Là tài khoản doanh nghiệp
    /// </summary>
    public bool? IsAdminClient { get; set; }

    public int? IdShop { get; set; }

    public bool? RequestCancel { get; set; }

    public DateTime? RequestCancelDate { get; set; }

    public bool? Gender { get; set; }

    public DateOnly? Birthday { get; set; }

    public bool? IsOmiCall { get; set; }

    public string OmiCallRole { get; set; }

    public string OmiCallPassword { get; set; }

    public int? OmiCallSipUser { get; set; }

    public string OmiCallSecretKey { get; set; }

    public string OmiCallDomain { get; set; }

    public bool? IsKol { get; set; }

    public int? CountOrdersFinish { get; set; }

    public double? TotalOrdersFinish { get; set; }

    public string InvoiceCompanyName { get; set; }

    public string InvoiceEmail { get; set; }

    public string InvoiceTaxCode { get; set; }

    public string InvoiceAddress { get; set; }

    public bool? IsAutoTax { get; set; }

    public string Platform { get; set; }

    public string Version { get; set; }

    public double? TotalSales { get; set; }

    public int? CountSales { get; set; }

    public double? TotalRewards { get; set; }

    public DateOnly? LastCall { get; set; }

    public double? TotalDiscount { get; set; }

    /// <summary>
    /// Người dùng đăng ký làm đại lý
    /// </summary>
    public bool? IsAgentRegistration { get; set; }

    public int? IdDepartment { get; set; }

    public bool? IsDepartmentManager { get; set; }

    public int? Role { get; set; }

    public virtual ICollection<Comments> Comments { get; set; } = new List<Comments>();

    public virtual ICollection<Customers> Customers { get; set; } = new List<Customers>();

    public virtual ICollection<Feeds> Feeds { get; set; } = new List<Feeds>();

    public virtual ICollection<FoodLikes> FoodLikes { get; set; } = new List<FoodLikes>();

    public virtual ICollection<GroupRegs> GroupRegs { get; set; } = new List<GroupRegs>();

    public virtual Banks IdBankNavigation { get; set; }

    public virtual Department IdDepartmentNavigation { get; set; }

    public virtual Levels IdLevelNavigation { get; set; }

    public virtual ICollection<LessionLikes> LessionLikes { get; set; } = new List<LessionLikes>();

    public virtual ICollection<Orders> Orders { get; set; } = new List<Orders>();

    public virtual ICollection<ProductRegs> ProductRegs { get; set; } = new List<ProductRegs>();

    public virtual ICollection<SaleOrders> SaleOrdersIdUserSaleNavigation { get; set; } = new List<SaleOrders>();

    public virtual ICollection<SaleOrders> SaleOrdersIdUserSoNavigation { get; set; } = new List<SaleOrders>();

    public virtual ICollection<SaleOrders> SaleOrdersIdUserSupNavigation { get; set; } = new List<SaleOrders>();

    public virtual ICollection<SaleOrders> SaleOrdersUser { get; set; } = new List<SaleOrders>();

    public virtual ICollection<SalesFlows> SalesFlowsIdDirectManagerNavigation { get; set; } = new List<SalesFlows>();

    public virtual ICollection<SalesFlows> SalesFlowsIdEmployeeNavigation { get; set; } = new List<SalesFlows>();

    public virtual ICollection<ShippingAddress> ShippingAddress { get; set; } = new List<ShippingAddress>();

    public virtual ICollection<Shops> Shops { get; set; } = new List<Shops>();

    public virtual ICollection<Suppliers> Suppliers { get; set; } = new List<Suppliers>();

    public virtual ICollection<UserAddress> UserAddress { get; set; } = new List<UserAddress>();

    public virtual ICollection<UserAddressShopLocations> UserAddressShopLocations { get; set; } = new List<UserAddressShopLocations>();

    public virtual ICollection<UserWebs> UserWebs { get; set; } = new List<UserWebs>();

    public virtual ICollection<WmFeedCommentLikes> WmFeedCommentLikes { get; set; } = new List<WmFeedCommentLikes>();

    public virtual ICollection<WmParticipants> WmParticipants { get; set; } = new List<WmParticipants>();

    public virtual ICollection<WmProjectMembers> WmProjectMembers { get; set; } = new List<WmProjectMembers>();

    public virtual ICollection<WmTaskCommentLikes> WmTaskCommentLikes { get; set; } = new List<WmTaskCommentLikes>();

    public virtual ICollection<WmTaskComments> WmTaskComments { get; set; } = new List<WmTaskComments>();

    public virtual ICollection<WmTasks> WmTasks { get; set; } = new List<WmTasks>();
}